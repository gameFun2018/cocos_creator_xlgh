{"version":3,"sources":["assets/scripts/DataManager.js","assets/scripts/Game.js","assets/scripts/Player.js","assets/scripts/SoundManager.js","assets/scripts/SoundType.js","assets/scripts/UIGameOver.js","assets/scripts/UIGame.js","assets/scripts/UIManager.js","assets/scripts/UIType.js"],"names":["cc","Class","extends","Component","properties","CurScore","default","type","Integer","CurGold","start","log","getCurScore","this","setCurScore","curScore","getCurGold","setCurGold","curGold","UIMgrNode","Node","onLoad","_UIGameNode","find","jump","destPos","rotAct","jumpBy","callFunc","onJumpEnd","seq","sequence","x","node","setScaleX","runAction","getComponent","onPlayerJumpEnd","SoundType","require","SoundList","AudioClip","_PlayList","playSound","SoundType_Bg","soundInfo","ID","length","retID","audioEngine","play","IsLoop","stopSound","stop","module","exports","SoundType_UIClick","SoundType_Enter","SoundType_Fail","SoundType_Move","UIType","ScoreLabel","Label","GoldLabel","RelifeBtn","Button","OkBtn","_DataManager","on","EventType","TOUCH_END","onRelifeBtn","onOkBtn","onEnable","DataManager","string","toString","onDisable","event","UIManager","parent","closeUI","UIType_GameOver","getUI","UIType_Game","reset","stopPropagation","GameState","StartBtn","PauseBtn","Score_OneJump","BlockPrefab","Prefab","BlockInitNode","BlockNode","DataMgrNode","PlayerNode","BlockOffVec","v2","_BlockPool","NodePool","_BlockList","_BlockListUse","_BlockTopPos","_CurGameState","_CurBlockIndex","i","block","instantiate","pushBlock","onStartBtn","onPauseBtn","onScreenTouch","firstBlock","initSceneBlock","getChildByName","position","initPlayerPos","setGameState","touchX","getLocationX","moveDirX","nextBlock","offset","pSub","pAdd","offVec","Math","abs","y","setTag","p","blockMoveAct","moveBy","pMult","len","nowPos","curBlock","getBlock","scaleY","dirX","randomMinus1To1","curOffPos","getTag","lastBlock","delelteUseBlock","onBlockDownFinish","data","posWorld","convertToWorldSpaceAR","convertToNodeSpaceAR","setLocalZOrder","pop","push","shift","state","director","resume","active","pause","downAct","getActionByTag","downActScale","scaleTo","openUI","splice","removeAllChildren","update","dt","blockTopPos","UIList","getUIScriptName","uiType","undefined","UIType_Rank"],"mappings":"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","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\n//数据管理器\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        //当前分数:\r\n        CurScore:\r\n        {\r\n            default: 0,\r\n            type: cc.Integer,\r\n        },\r\n        //当前金币数：\r\n        CurGold: \r\n        {\r\n            default: 0,\r\n            type: cc.Integer,\r\n        },\r\n    },\r\n    \r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    //\r\n    start () {\r\n        cc.log(\"DataManager start\");\r\n       \r\n    },\r\n    \r\n    //获取当前分数\r\n    getCurScore()\r\n    {\r\n        return this.CurScore;   \r\n    },\r\n\r\n    //设置当前分数\r\n    setCurScore(curScore)\r\n    {\r\n        this.CurScore = curScore; \r\n    },\r\n    \r\n\r\n    //获取当前金币\r\n    getCurGold()\r\n    {\r\n        return this.CurGold;   \r\n    },\r\n\r\n    //设置当前金币\r\n    setCurGold(curGold)\r\n    {\r\n        this.CurGold = curGold;\r\n        \r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        //UIManager\r\n        UIMgrNode: cc.Node,\r\n\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad ()\r\n    {\r\n\r\n    },\r\n\r\n    start () \r\n    {\r\n        //初始化场景 Block\r\n        \r\n\r\n\r\n    },\r\n\r\n    \r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\n//驴\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        _UIGameNode: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () \r\n    {\r\n        this._UIGameNode = cc.find('Canvas/UIManager/UIGame');\r\n    },\r\n\r\n    //跳跃\r\n    jump(destPos)\r\n    {\r\n\r\n        var rotAct = cc.jumpBy(0.2, destPos, 80, 1);\r\n        var callFunc = cc.callFunc(this.onJumpEnd, this);\r\n        var seq = cc.sequence(rotAct, callFunc);\r\n        if(destPos.x > 0)\r\n        {\r\n            this.node.setScaleX(1);      \r\n        }\r\n        else\r\n        {\r\n            this.node.setScaleX(-1);   \r\n        }\r\n\r\n        this.node.runAction(seq);\r\n    },\r\n\r\n    //跳跃结束\r\n    onJumpEnd()\r\n    {\r\n        this._UIGameNode.getComponent('UIGame').onPlayerJumpEnd();   \r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar SoundType = require('SoundType');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        SoundList:\r\n        {\r\n            default: [],   \r\n            type: [cc.AudioClip],\r\n        },\r\n\r\n        //play ID list\r\n        _PlayList: [],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n       this.playSound(SoundType.SoundType_Bg);\r\n    },\r\n\r\n    //播放声音 resIndex：声音索引\r\n    playSound(soundInfo)\r\n    {\r\n        if(soundInfo.ID >= this.SoundList.length)\r\n        {\r\n            cc.log(\"playSound resIndex invalid \");\r\n            return;\r\n        }\r\n        var retID =  cc.audioEngine.play(this.SoundList[soundInfo.ID], soundInfo.IsLoop);\r\n        this._PlayList[soundInfo.ID] = retID;\r\n\r\n    },\r\n\r\n    //停止声音\r\n    stopSound(soundInfo)\r\n    {\r\n        if(soundInfo.ID >= this.SoundList.length)\r\n        {\r\n            cc.log(\"playSound resIndex invalid \");\r\n            return;\r\n        }\r\n        if( this._PlayList[soundInfo.ID] != -1)\r\n        {\r\n           cc.audioEngine.stop(this._PlayList[soundInfo.ID]); \r\n        }\r\n    }\r\n    \r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar SoundType = \r\n{\r\n    //背景音乐\r\n    SoundType_Bg:\r\n    {\r\n        ID: 0,\r\n        IsLoop: true,\r\n    },\r\n    //按钮点击\r\n    SoundType_UIClick:\r\n    {\r\n        ID: 1,\r\n        IsLoop: false,   \r\n    },\r\n    //成功进入\r\n    SoundType_Enter:\r\n    {\r\n        ID: 2,   \r\n        IsLoop: false,   \r\n    },\r\n    //失败\r\n    SoundType_Fail:\r\n    {\r\n        ID: 3,   \r\n        IsLoop: false,   \r\n    },\r\n    //move\r\n    SoundType_Move:\r\n    {\r\n        ID: 4,   \r\n        IsLoop: false, \r\n    },\r\n}\r\n\r\nmodule.exports = SoundType;\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar UIType = require('UIType');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        //分数Label\r\n        ScoreLabel:\r\n        {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        //金币Label:\r\n        GoldLabel:\r\n        {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        //复活按钮 \r\n        RelifeBtn:\r\n        {\r\n            default: null,\r\n            type: cc.Button,\r\n        },\r\n        //跳过按钮：\r\n        OkBtn:\r\n        {\r\n            default: null,\r\n            type: cc.Button,\r\n        },\r\n\r\n        //\r\n        _DataManager: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad ()\r\n    {\r\n        this._DataManager = cc.find('DataManager');\r\n    },\r\n\r\n    start () \r\n    {\r\n        this.RelifeBtn.node.on(cc.Node.EventType.TOUCH_END, this.onRelifeBtn, this);\r\n        this.OkBtn.node.on(cc.Node.EventType.TOUCH_END, this.onOkBtn, this);\r\n    },\r\n\r\n    onEnable()\r\n    {\r\n        var DataManager = this._DataManager.getComponent('DataManager');\r\n        this.ScoreLabel.string = DataManager.getCurScore().toString();\r\n        this.GoldLabel.string = DataManager.getCurGold().toString();\r\n    },\r\n\r\n    onDisable()\r\n    {\r\n\r\n    },\r\n\r\n    //复活按钮 \r\n    onRelifeBtn(event)\r\n    {\r\n        var DataManager = this._DataManager.getComponent('DataManager');\r\n        var curGold = DataManager.getCurGold();\r\n        if(curGold < 20)\r\n        {\r\n\r\n            //return;\r\n        }\r\n\r\n        var UIManager = this.node.parent.getComponent('UIManager');\r\n        UIManager.closeUI(UIType.UIType_GameOver);\r\n        var gameUI = UIManager.getUI(UIType.UIType_Game);\r\n        gameUI.reset();\r\n\r\n        event.stopPropagation();\r\n    },\r\n\r\n    //跳过\r\n    onOkBtn(event)\r\n    {\r\n        var UIManager = this.node.parent.getComponent('UIManager');\r\n        UIManager.closeUI(UIType.UIType_GameOver);\r\n\r\n        var gameUI = UIManager.getUI(UIType.UIType_Game);\r\n        gameUI.reset();\r\n        \r\n        event.stopPropagation();\r\n    },\r\n\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar UIType = require('UIType');\r\n//游戏状态\r\nvar GameState = \r\n{\r\n    //无效\r\n    GS_Invalid: -1,\r\n    //游戏准备，等待开始\r\n    GS_Ready: 0,\r\n    //暂停\r\n    GS_Pause: 1,\r\n    //游戏已开始，等待操作\r\n    GS_WaitOP: 2, \r\n    //游戏，玩家驴跳跃中\r\n    GS_PlayerJump: 3,\r\n    //结束\r\n    GS_Over: 4,\r\n};\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        //开始按钮 \r\n        StartBtn: \r\n        {\r\n            default: null,  \r\n            type: cc.Button,\r\n\r\n        },\r\n        //暂停按钮:\r\n        PauseBtn:\r\n        {\r\n            default: null,  \r\n            type: cc.Button,\r\n        },\r\n        //跳跃一次加分\r\n        Score_OneJump:\r\n        {\r\n            default: 1,\r\n            type: cc.Integer,\r\n        },\r\n\r\n        //Block prefab\r\n        BlockPrefab: cc.Prefab,\r\n        //初始节点\r\n        BlockInitNode: cc.Node,\r\n        //Block的父节点\r\n        BlockNode: cc.Node,\r\n        //数据管理器节点\r\n        DataMgrNode: cc.Node,\r\n        //主角节点\r\n        PlayerNode: cc.Node,\r\n        //block间隔\r\n        BlockOffVec: cc.v2(150, 100),\r\n        //数据管理器\r\n        DataManager: cc.Node,\r\n\r\n        //Block池\r\n        _BlockPool: cc.NodePool,\r\n        //未使用的blocklist\r\n        _BlockList: [],\r\n        //已使用的blockList\r\n        _BlockListUse: [],\r\n        _BlockTopPos: cc.v2(0, 0),\r\n        //当前\r\n        _CurGameState: -1,\r\n        //当前Block索引\r\n        _CurBlockIndex: 0,\r\n        //\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () \r\n     {\r\n        this.DataManager = cc.find('DataManager');\r\n        \r\n        this._BlockPool = new cc.NodePool();  \r\n\r\n        //预创建的Block\r\n        for(var i = 0; i < 30; ++i)\r\n        {\r\n            var block = cc.instantiate(this.BlockPrefab);\r\n            this.pushBlock(block);\r\n        }\r\n\r\n     },\r\n\r\n\r\n    start () \r\n    {\r\n        //开始按钮 \r\n       this.StartBtn.node.on(cc.Node.EventType.TOUCH_END, this.onStartBtn, this);\r\n       this.PauseBtn.node.on(cc.Node.EventType.TOUCH_END, this.onPauseBtn, this);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onScreenTouch, this);\r\n       //初始化场景\r\n       var firstBlock = this.initSceneBlock();\r\n       this._BlockTopPos = firstBlock.getChildByName('BlockTop').position;\r\n       this.initPlayerPos(firstBlock);\r\n\r\n        //临时测试\r\n       this.setGameState(GameState.GS_Ready);\r\n       this._CurBlockIndex = 0;\r\n\r\n    },\r\n\r\n    //开始按钮 \r\n    onStartBtn(event)\r\n    {\r\n        this.setGameState(GameState.GS_WaitOP); \r\n        event.stopPropagation();\r\n    },\r\n\r\n    //暂停按钮 \r\n    onPauseBtn()\r\n    {\r\n        this.setGameState(GameState.GS_Pause);\r\n        event.stopPropagation();     \r\n    },\r\n\r\n    //屏幕点击\r\n    onScreenTouch(event)\r\n    {\r\n        if(this._CurGameState != GameState.GS_WaitOP )\r\n        {\r\n            return;\r\n        }\r\n\r\n        var touchX = event.getLocationX();\r\n        cc.log(\"touch end\", touchX);\r\n        var moveDirX = 1;\r\n        //？？这个坐标值需要再确认\r\n        if(touchX > 360)\r\n        {\r\n            moveDirX = 1;\r\n        }else \r\n        {\r\n            moveDirX = -1;\r\n        }\r\n\r\n        //根据当前Block位置，获取跳跃目标位置\r\n        if(this._CurBlockIndex < 0 || this._CurBlockIndex >= this._BlockListUse.length - 1)\r\n        {\r\n            cc.log(\"onScreenTouch invalid _CurBlockIndex \", this._CurBlockIndex);\r\n            return;\r\n        }\r\n\r\n        var nextBlock = this._BlockListUse[this._CurBlockIndex + 1];\r\n        if(nextBlock == null)\r\n        {\r\n            cc.log(\"onScreenTouch invalid nextBlock null\", this._CurBlockIndex + 1);\r\n            return;    \r\n        }\r\n        \r\n        var offset = cc.pSub(cc.pAdd(this._BlockTopPos, nextBlock.position), this.PlayerNode.position);\r\n        //根据触摸的方向，设置玩家驴跳跃的方向 及 场景移动 \r\n        var offVec = cc.v2(moveDirX *  Math.abs(offset.x), offset.y);\r\n        this.PlayerNode.getComponent('Player').jump(offVec);\r\n        this.PlayerNode.setTag(moveDirX);\r\n        //场景移动 \r\n        offVec = cc.p(moveDirX * this.BlockOffVec.x, this.BlockOffVec.y)\r\n        var blockMoveAct = cc.moveBy(0.2, cc.pMult(offVec, -1))\r\n        this.BlockNode.runAction(blockMoveAct);\r\n        \r\n        this.setGameState(GameState.GS_PlayerJump);\r\n    },\r\n\r\n    //玩家驴跳跃结束的处理\r\n    onPlayerJumpEnd()\r\n    {\r\n\r\n        //-------------跳跃完成后，在上面新添加一个Block-------------\r\n        var len = this._BlockListUse.length;\r\n        var nowPos = this._BlockListUse[len - 1].position;\r\n       \r\n        var curBlock = this.getBlock();\r\n        curBlock.parent = this.BlockNode;\r\n        curBlock.scaleY = 1;\r\n        //设置位置\r\n        var dir = cc.randomMinus1To1();\r\n        var dirX = (dir >= 0 ? 1 : -1); \r\n        var curOffPos = cc.v2(this.BlockOffVec.x * dirX, this.BlockOffVec.y);\r\n        nowPos = cc.pAdd(nowPos, curOffPos);\r\n        curBlock.position = nowPos;\r\n\r\n        this._CurBlockIndex += 1;\r\n        //判断跳跃位置是否正确\r\n        if(this._CurBlockIndex < 1)\r\n        {\r\n            cc.log('onPlayerJumpEnd invalid _CurBlockIndex');\r\n            return;\r\n        }\r\n\r\n        var moveDirX = this.PlayerNode.getTag();\r\n        var curBlock = this._BlockListUse[this._CurBlockIndex];\r\n        var lastBlock = this._BlockListUse[this._CurBlockIndex - 1];\r\n        //\r\n        if( moveDirX > 0 && (curBlock.position.x > lastBlock.position.x) \r\n            || moveDirX < 0 && (curBlock.position.x < lastBlock.position.x) )\r\n        {\r\n            //跳跃方向正确\r\n            cc.log(\"right \");\r\n            this.setGameState(GameState.GS_WaitOP);\r\n            //分数更新\r\n            var DataManager = this.DataManager.getComponent('DataManager');\r\n            DataManager.setCurScore(DataManager.getCurScore() + this.Score_OneJump); \r\n\r\n        }\r\n        else\r\n        {\r\n            cc.log(\"wrong \");\r\n            //跳跃方向错误\r\n            this.setGameState(GameState.GS_Over);\r\n        }\r\n\r\n        //如果当前跳跃数 > 5,开始删除最前面的use Block \r\n        if(this._CurBlockIndex > 5)\r\n        {\r\n            this.delelteUseBlock();\r\n        }\r\n\r\n    },\r\n\r\n    //Block下移的处理\r\n    onBlockDownFinish(data)\r\n    {\r\n        cc.log(\"onBlockDownFinish\", data);\r\n        if(this._CurBlockIndex >= 0 && this._CurBlockIndex < this._BlockListUse.length)\r\n        {   \r\n            if(this._BlockListUse[this._CurBlockIndex] === data)\r\n            {\r\n                if(this._CurGameState == GameState.GS_WaitOP)\r\n                {\r\n                    this.setGameState(GameState.GS_Over);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    //初始化场景Block\r\n    initSceneBlock()\r\n    {\r\n       var posWorld = this.BlockInitNode.parent.convertToWorldSpaceAR(this.BlockInitNode.position);\r\n       var initPos = this.BlockNode.convertToNodeSpaceAR(posWorld);\r\n       \r\n       var nowPos = initPos;\r\n       var firstBlock;\r\n       for(let i = 0; i < 30; ++i)\r\n       {\r\n           var curBlock = this.getBlock();\r\n           //挂接到BlockNode上\r\n           curBlock.parent = this.BlockNode;\r\n           curBlock.scaleY = 1;\r\n           if(i == 0)\r\n           {\r\n              curBlock.position = nowPos;\r\n              firstBlock = curBlock;              \r\n           }\r\n           else\r\n           {\r\n             var dir = cc.randomMinus1To1();\r\n             var dirX = (dir >= 0 ? 1 : -1); \r\n             var curOffPos = cc.v2(this.BlockOffVec.x * dirX, this.BlockOffVec.y);\r\n             nowPos = cc.pAdd(nowPos, curOffPos);\r\n             curBlock.position = nowPos;\r\n           }\r\n       }\r\n       return firstBlock;\r\n    },\r\n\r\n    //初始化玩家位置：小驴位置\r\n    initPlayerPos(firstBlock)\r\n    {\r\n        this.PlayerNode.position =  cc.pAdd(firstBlock.position, this._BlockTopPos);\r\n        this.PlayerNode.setLocalZOrder(100000);\r\n    },\r\n\r\n    //------------------------Block操作 begin--------------------------\r\n    //获取Block\r\n    getBlock()\r\n    {\r\n        if(this._BlockList.length > 0)\r\n        {\r\n            var block = this._BlockList.pop();\r\n\r\n            this._BlockListUse.push(block);\r\n           return block;   \r\n        }\r\n        else\r\n        {\r\n            var block = cc.instantiate(this.BlockPrefab);\r\n            this.pushBlock(block);\r\n\r\n            return this.getBlock();   \r\n        }\r\n    },\r\n\r\n    //添加Block\r\n    pushBlock(block)\r\n    {\r\n       // this._BlockPool.put(block);\r\n        this._BlockList.push(block);\r\n    },\r\n\r\n    //移除Block(移除一个最下面的，屏幕外的Block)\r\n    delelteUseBlock()\r\n    {\r\n       var firstBlock = this._BlockListUse.shift(); \r\n       firstBlock.parent = null;\r\n       this._BlockList.push(firstBlock);\r\n       this._CurBlockIndex -= 1;            \r\n    },\r\n\r\n    //------------------------Block操作 end--------------------------\r\n\r\n    //游戏状态的处理\r\n    setGameState(state)\r\n    {\r\n        //处理暂停逻辑\r\n        if(this._CurGameState == GameState.GS_Pause && state !=  this._CurGameState)\r\n        {\r\n            cc.director.resume();    \r\n        }\r\n\r\n        //新状态的处理\r\n        this._CurGameState = state;   \r\n        //准备状态\r\n        if(this._CurGameState == GameState.GS_Ready)\r\n        {\r\n            this.StartBtn.node.active = true;\r\n            this.PauseBtn.node.active = false;\r\n        }\r\n        //暂停\r\n        else if(this._CurGameState == GameState.GS_Pause)\r\n        {\r\n            cc.director.pause();\r\n\r\n            //按钮显示与隐藏\r\n            this.StartBtn.node.active = true;\r\n            this.PauseBtn.node.active = false;\r\n        }\r\n        //等待游戏中的操作\r\n        else if(this._CurGameState == GameState.GS_WaitOP)\r\n        {\r\n            this.StartBtn.node.active = false;\r\n            this.PauseBtn.node.active = true;\r\n\r\n            //对当前Block进行下移操作\r\n            if(this._CurBlockIndex < 0 || this._CurBlockIndex >= this._BlockListUse.length)\r\n            {\r\n                cc.log(\"GS_WaitOP invalid _CurBlockIndex \", this._CurBlockIndex);\r\n                return;\r\n            }\r\n\r\n            var curBlock = this._BlockListUse[this._CurBlockIndex];\r\n            if(curBlock == null)\r\n            {\r\n                cc.log(\"GS_WaitOP invalid curBlock null\", this._CurBlockIndex);\r\n                return;    \r\n            }\r\n            //block下移\r\n            var downAct = curBlock.getActionByTag(0);\r\n            if(downAct == null)\r\n            {\r\n                var downActScale = cc.scaleTo(2, 1, 0);\r\n                var callFunc = cc.callFunc(this.onBlockDownFinish, this, curBlock); \r\n                downAct = cc.sequence(downActScale, callFunc);\r\n                curBlock.runAction(downAct);\r\n            }\r\n        }\r\n        else if(this._CurGameState == GameState.GS_Over)\r\n        {\r\n            //按钮显示与隐藏\r\n            this.StartBtn.node.active = false;\r\n            this.PauseBtn.node.active = false;\r\n\r\n            var UIManager = this.node.parent.getComponent('UIManager');\r\n            UIManager.openUI(UIType.UIType_GameOver);\r\n\r\n        }\r\n\r\n    },\r\n    //重置\r\n    reset()\r\n    {\r\n        //将当前Use列表转移到空闲列表\r\n        for(var i = 0; i < this._BlockListUse.length; ++i)\r\n        {\r\n            var block = this._BlockListUse[i];\r\n            this._BlockList.push(block); \r\n        }\r\n        this._BlockListUse.splice(0, this._BlockListUse.length);\r\n        this._CurBlockIndex = 0;\r\n        //从场景移除Blocks\r\n        this.BlockNode.removeAllChildren();\r\n        //重构场景\r\n        this.PlayerNode.parent = this.BlockNode;\r\n\r\n        var firstBlock = this.initSceneBlock();\r\n        this._BlockTopPos = firstBlock.getChildByName('BlockTop').position;\r\n        this.initPlayerPos(firstBlock);\r\n        //游戏状态\r\n        this.setGameState(GameState.GS_Ready);\r\n\r\n\r\n    },\r\n    //更新\r\n    update (dt) \r\n    {\r\n        if(this._CurGameState == GameState.GS_WaitOP)\r\n        {\r\n            //更新玩家驴的位置\r\n             if(this._CurBlockIndex < 0 || this._CurBlockIndex >= this._BlockListUse.length)\r\n             {\r\n                 return;\r\n             }\r\n \r\n             var curBlock = this._BlockListUse[this._CurBlockIndex];\r\n             if(curBlock == null)\r\n             {\r\n                 return;    \r\n             }\r\n             //block下移\r\n             var blockTopPos = cc.pAdd(curBlock.position , cc.p(0, this._BlockTopPos.y * curBlock.scaleY));\r\n             this.PlayerNode.position = blockTopPos;\r\n        }\r\n    },\r\n\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar UIType = require(\"UIType\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        //\r\n        UIList:\r\n        {\r\n            default: [],\r\n            type: [cc.Node],        \r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    //获取UI对应的脚本\r\n    getUIScriptName(uiType)\r\n    {\r\n        var scriptList = ['UIGame', 'UIGameOver', 'UIGame'];\r\n        return scriptList[uiType];\r\n    },\r\n\r\n    //打开UI\r\n    openUI(uiType)\r\n    {\r\n        if(uiType >= this.UIList.length)\r\n        {\r\n            cc.log(\"openUI invalid uiType, please check UIList\");\r\n            return;\r\n        } \r\n\r\n        if(this.UIList[uiType] == null || this.UIList[uiType] == undefined)\r\n        {\r\n            cc.log(\"openUI invalid uiType, object null\");\r\n            return;   \r\n        }\r\n        this.UIList[uiType].active = true;\r\n    },\r\n    //关闭UI\r\n    closeUI(uiType)\r\n    {\r\n        if(uiType >= this.UIList.length)\r\n        {\r\n            cc.log(\"closeUI invalid uiType, please check UIList\");\r\n            return;\r\n        } \r\n        \r\n        this.UIList[uiType].active = false;\r\n    },\r\n    \r\n    getUI(uiType)\r\n    {\r\n        if(uiType >= this.UIList.length)\r\n        {\r\n            cc.log(\"closeUI invalid uiType, please check UIList\");\r\n            return;\r\n        } \r\n       \r\n       return this.UIList[uiType].getComponent(this.getUIScriptName(uiType)); \r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar UIType = {\r\n    UIType_Game: 0,\r\n    UIType_GameOver: 1,\r\n    UIType_Rank: 2,\r\n\r\n};\r\n\r\n\r\nmodule.exports = UIType;\r\n"],"sourceRoot":"/source/","file":"project.js"}